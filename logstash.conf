input {
 #stdin { }
  jdbc {
    #注意mysql连接地址一定要用ip，不能使用localhost等
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/alphareign"
    jdbc_user => "root"
    jdbc_password => "123456"
    #这个jar包的地址是容器内的地址
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.21.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_paging_enabled => "true"
    jdbc_page_size => "10000"
    statement => "SELECT infohash,name,files,tags,type,length,created,updated,seeders,leechers,trackerUpdated,searchUpdate,searchUpdated FROM torrents WHERE created >:sql_last_value ORDER BY created"
    # 设置监听间隔  各字段含义（由左至右）分、时、天、月、年，全部为*默认含>义为每分钟都更新
    schedule => "* * * * *"
    # 执行sql文路径及名称
    # statement_filepath => "/home/logstash/blog.sql"
    use_column_value => true
    tracking_column => "created"
    tracking_column_type => timestamp
    # 保存上一次运行>的信息(tracking_column)
    # last_run_metadata_path => "./logstash_jdbc_last_run"
  }
}

filter{
  json {
    source => "files"
    target => "tmp_files"
  }
  ruby {
    code => '
      files = event.get("tmp_files")

      event.set("files_json", "[files]")
      event.set("search", event.get("name").gsub(/[_-]/," "))

      event.remove("tmp_files")
      event.remove("files")

      files.each do |child|
        if !child["path"].nil?
            child["path"] = child["path"].join("/")
        else
            child["path"] = ""
        end
      end
      puts files
      event.set("files", files)
    '
  }
  # mutate {
  #   gsub => [
  #       "search", "[_-]", " "
  #   ]
  # }
  # mutate {
  #   remove_field => [ "tmp_files" ]
  # }
}

output {
  #stdout {
  #    codec => json_lines
  #}
  elasticsearch {
    hosts => "http://elasticsearch:9200"
    user => "elastic"
    password => "123456"
    index => "torrents"
    action => "update"
    doc_as_upsert => true
    document_type => "hash"
    document_id => "%{infohash}"
  }
}
